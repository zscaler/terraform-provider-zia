package zia

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceAdvancedThreatSettings_Basic(t *testing.T) {
	resourceName := "data.zia_advanced_threat_settings.this"

	resource.Test(t, resource.TestCase{
		PreCheck:  func() { testAccPreCheck(t) },
		Providers: testAccProviders,
		Steps: []resource.TestStep{
			{
				Config: testAccCheckDataSourceAdvancedThreatSettingsConfig_basic,
				Check: resource.ComposeTestCheckFunc(
					// Ensure all attributes are set correctly
					resource.TestCheckResourceAttrSet(resourceName, "risk_tolerance"),
					resource.TestCheckResourceAttrSet(resourceName, "risk_tolerance_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "cmd_ctl_server_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "cmd_ctl_server_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "cmd_ctl_traffic_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "cmd_ctl_traffic_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "malware_sites_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "malware_sites_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "activex_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "activex_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "browser_exploits_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "browser_exploits_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "file_format_vunerabilites_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "file_format_vunerabilites_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "known_phishing_sites_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "known_phishing_sites_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "suspected_phishing_sites_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "suspected_phishing_sites_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "suspect_adware_spyware_sites_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "suspect_adware_spyware_sites_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "web_spam_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "web_spam_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "irc_tunnelling_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "irc_tunnelling_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "anonymizer_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "anonymizer_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "cookie_stealing_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "cookie_stealing_pcap_enabled"),
					resource.TestCheckResourceAttrSet(resourceName, "potential_malicious_requests_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "potential_malicious_requests_capture"),
					// resource.TestCheckResourceAttrSet(resourceName, "blocked_countries"),
					resource.TestCheckResourceAttrSet(resourceName, "block_countries_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "bit_torrent_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "bit_torrent_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "tor_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "tor_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "google_talk_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "google_talk_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "ssh_tunnelling_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "ssh_tunnelling_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "crypto_mining_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "crypto_mining_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "ad_spyware_sites_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "ad_spyware_sites_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "dga_domains_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "dga_domains_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "alert_for_unknown_suspicious_c2_traffic"),
					resource.TestCheckResourceAttrSet(resourceName, "malicious_urls_capture"),
					// Verify specific values
					resource.TestCheckResourceAttr(resourceName, "risk_tolerance", "50"),
					resource.TestCheckResourceAttr(resourceName, "risk_tolerance_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "cmd_ctl_server_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "cmd_ctl_server_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "cmd_ctl_traffic_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "cmd_ctl_traffic_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "malware_sites_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "malware_sites_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "activex_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "activex_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "browser_exploits_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "browser_exploits_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "file_format_vunerabilites_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "file_format_vunerabilites_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "known_phishing_sites_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "known_phishing_sites_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "suspected_phishing_sites_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "suspected_phishing_sites_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "suspect_adware_spyware_sites_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "suspect_adware_spyware_sites_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "web_spam_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "web_spam_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "irc_tunnelling_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "irc_tunnelling_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "anonymizer_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "anonymizer_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "cookie_stealing_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "cookie_stealing_pcap_enabled", "false"),
					resource.TestCheckResourceAttr(resourceName, "potential_malicious_requests_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "potential_malicious_requests_capture", "false"),
					// resource.TestCheckResourceAttr(resourceName, "blocked_countries", "true"),
					resource.TestCheckResourceAttr(resourceName, "block_countries_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "bit_torrent_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "bit_torrent_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "tor_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "tor_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "google_talk_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "google_talk_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "ssh_tunnelling_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "ssh_tunnelling_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "crypto_mining_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "crypto_mining_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "ad_spyware_sites_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "ad_spyware_sites_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "dga_domains_blocked", "true"),
					resource.TestCheckResourceAttr(resourceName, "dga_domains_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "alert_for_unknown_suspicious_c2_traffic", "false"),
					resource.TestCheckResourceAttr(resourceName, "malicious_urls_capture", "false"),
				),
			},
		},
	})
}

var testAccCheckDataSourceAdvancedThreatSettingsConfig_basic = `
data "zia_advanced_threat_settings" "this" {}
`
