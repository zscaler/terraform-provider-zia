package zia

import (
	"testing"

	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/resource"
)

func TestAccDataSourceATPMalwareSettings_Basic(t *testing.T) {
	resourceName := "data.zia_atp_malware_settings.this"

	resource.Test(t, resource.TestCase{
		PreCheck:  func() { testAccPreCheck(t) },
		Providers: testAccProviders,
		Steps: []resource.TestStep{
			{
				Config: testAccCheckDataSourceATPMalwareSettingsConfig_basic,
				Check: resource.ComposeTestCheckFunc(
					// Ensure all attributes are set correctly
					resource.TestCheckResourceAttrSet(resourceName, "virus_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "virus_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "unwanted_applications_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "unwanted_applications_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "trojan_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "trojan_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "worm_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "worm_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "adware_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "adware_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "spyware_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "spyware_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "ransomware_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "ransomware_capture"),
					resource.TestCheckResourceAttrSet(resourceName, "remote_access_tool_blocked"),
					resource.TestCheckResourceAttrSet(resourceName, "remote_access_tool_capture"),

					// Verify specific values
					resource.TestCheckResourceAttr(resourceName, "virus_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "virus_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "unwanted_applications_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "unwanted_applications_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "trojan_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "trojan_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "worm_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "worm_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "adware_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "adware_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "spyware_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "spyware_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "ransomware_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "ransomware_capture", "false"),
					resource.TestCheckResourceAttr(resourceName, "remote_access_tool_blocked", "false"),
					resource.TestCheckResourceAttr(resourceName, "remote_access_tool_capture", "false"),
				),
			},
		},
	})
}

var testAccCheckDataSourceATPMalwareSettingsConfig_basic = `
data "zia_atp_malware_settings" "this" {}
`
